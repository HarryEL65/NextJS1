{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from \"next/head\"; // our-domain.com/\n// import { useState, useEffect } from \"react/cjs/react.development\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react/cjs/react.production.min\"; // our-domain.com/new-meetup\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 5, 123gg Some city\",\n//     description: \"this is a first meetup\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 3, the best city\",\n//     description: \"this is a second meetup\",\n//   },\n// ];\n\nvar HomePage = function HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   // send a http request and fetch data\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  // // in the first Render cycle of the Component the\n  // // loadedMeetups value will have the empty array as a default value\n  // return <MeetupList meetups={loadedMeetups} />;\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active meetups\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    }), \";\"]\n  });\n}; // Only in Component Files inside the Page Folder\n// you can export the getStaticProps function (the name is important)\n// this is as reserve Name. NextJS Will look for a function\n// with that name and if it finds it will execute that function\n// during the Prerendering process so that it will not direclty call our\n// component function and use the return jsx snapshot as html content but\n// will first of all call the getStaticProps before it call the Component function\n// getStaticProps has this name because indeed his job is to prepare props for this page\n// and this props could then get contains the data this page needs.\n// and that usefull because getStaticProps is allowed to be asynchronous.\n// You can return a promise and then... this is the key thing NextJS will wait until this promise to\n// resolve which means it waits your data is loaded to return the props for the component function.\n// And with that you're able to load data before component function is executed\n// so that this component can be rendered with the require data.\n// that mean that data SEO will have access to the data also\n\n\n// export const getServerSideProps = async (context) => {\n//   // Just like getStaticProps this is a reserved name.\n//   // This function will not run during the build process but instead on the server\n//   // after deployment.\n//   // We can still fetch data from an API or from the fileSystem and any code you write here\n//   // will always run on the server never in the Client\n//   // so you can do operation that use credentials for example\n//   // if you need you can have access to the incoming request and response through the contex\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//     // this code will run for every incoming request and not after a revalidate delay\n//   };\n// };\nexport var __N_SSG = true;\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}