{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harryelnekave/Desktop/DEV/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// the same way we have in regular React Project dynamic id (e.g:  our-domain/:id)\nimport { Fragment } from \"react/cjs/react.production.min\"; // our-domain/<dynamic-id>\n\nconst MeetupDetailsDynamicPage = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}; // export default MeetupDetails;","map":{"version":3,"sources":["/Users/harryelnekave/Desktop/DEV/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetailsDynamicPage","props"],"mappings":";;;;;;;;;AAAA;AAEA,SAASA,QAAT,QAAyB,gCAAzB,C,CAEA;;AACA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,sBAAO,QAAC,aAAD,oBAAmBC,KAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAIA","sourcesContent":["// the same way we have in regular React Project dynamic id (e.g:  our-domain/:id)\n\nimport { Fragment } from \"react/cjs/react.production.min\";\n\n// our-domain/<dynamic-id>\nconst MeetupDetailsDynamicPage = () => {\n  return <MeetupDetails {...props} />;\n};\n\n// export default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}