{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harryelnekave/Desktop/DEV/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\n// the same way we have in regular React Project dynamic id (e.g:  our-domain/:id)\nimport { Router, useRouter } from \"next/router\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\"; // our-domain/<dynamic-id>\n\nconst MeetupDetailsDynamicPage = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    id: \"m2\",\n    title: \"A Second Meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\",\n    address: \"Some address 3, the best city\",\n    description: \"this is a second meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticProps = async context => {\n  // Fetch data for a single meetup\n  // To fetch the data for the meetup we need a way to identify the meetup\n  // Here we need a way to identify the id and the id is thankfully encoded in th URL\n  // and basically we could have use the useRouter hook from NextJS to identify the id and use the query to reach the meetupdId\n  // But the problem is that the useRouter Hook can only be use in Component Function not in getStaticProps\n  // Hopefully the getStaticProps also receive a context as Parameter\n  // (although you cannot access the req and res as you do in getSerevrSideProps)\n  // but has a params key\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"A Second Meetup\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\",\n        address: \"Some address 3, the best city\",\n        description: \"this is a second meetup\"\n      }\n    }\n  };\n};\nexport default MeetupDetailsDynamicPage;","map":{"version":3,"sources":["/Users/harryelnekave/Desktop/DEV/NextJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Router","useRouter","useEffect","MeetupDetails","MeetupDetailsDynamicPage","getStaticProps","context","meetupId","params","console","log","props","meetupData","id","title","image","address","description"],"mappings":";;AAAA;AAEA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B,C,CACA;;AACA,MAAMC,wBAAwB,GAAG,MAAM;AACrC,sBACE,QAAC,aAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,EAAC,iBAFR;AAGE,IAAA,KAAK,EAAC,uHAHR;AAIE,IAAA,OAAO,EAAC,+BAJV;AAKE,IAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeD,QAAhC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEN,QADM;AAEVO,QAAAA,KAAK,EAAE,iBAFG;AAGVC,QAAAA,KAAK,EACH,uHAJQ;AAKVC,QAAAA,OAAO,EAAE,+BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD,CAzBM;AA2BP,eAAeb,wBAAf","sourcesContent":["// the same way we have in regular React Project dynamic id (e.g:  our-domain/:id)\n\nimport { Router, useRouter } from \"next/router\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n// our-domain/<dynamic-id>\nconst MeetupDetailsDynamicPage = () => {\n  return (\n    <MeetupDetails\n      id=\"m2\"\n      title=\"A Second Meetup\"\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\"\n      address=\"Some address 3, the best city\"\n      description=\"this is a second meetup\"\n    />\n  );\n};\n\nexport const getStaticProps = async (context) => {\n  // Fetch data for a single meetup\n\n  // To fetch the data for the meetup we need a way to identify the meetup\n  // Here we need a way to identify the id and the id is thankfully encoded in th URL\n  // and basically we could have use the useRouter hook from NextJS to identify the id and use the query to reach the meetupdId\n  // But the problem is that the useRouter Hook can only be use in Component Function not in getStaticProps\n  // Hopefully the getStaticProps also receive a context as Parameter\n  // (although you cannot access the req and res as you do in getSerevrSideProps)\n  // but has a params key\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"A Second Meetup\",\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/640px-Stadtbild_M%C3%BCnchen.jpg\",\n        address: \"Some address 3, the best city\",\n        description: \"this is a second meetup\",\n      },\n    },\n  };\n};\n\nexport default MeetupDetailsDynamicPage;\n"]},"metadata":{},"sourceType":"module"}